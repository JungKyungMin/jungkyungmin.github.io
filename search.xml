<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Spring- IoC / DI</title>
      <link href="/2021/10/14/spring-iocdi/"/>
      <url>/2021/10/14/spring-iocdi/</url>
      
        <content type="html"><![CDATA[<h1 id="IoC-Inversion-of-Control-와-DI-Dependency-Injection"><a href="#IoC-Inversion-of-Control-와-DI-Dependency-Injection" class="headerlink" title="IoC ( Inversion of Control ) 와 DI ( Dependency Injection )"></a>IoC ( Inversion of Control ) 와 DI ( Dependency Injection )</h1><p><img src="/image/iocdi.png">{: width=”100” height=”100”}</p><h2 id="IoC-Inversion-of-Control"><a href="#IoC-Inversion-of-Control" class="headerlink" title="IoC ( Inversion of Control )"></a>IoC ( Inversion of Control )</h2><ul><li>개발자에서 → 프레임워크로 제어의 객체관리권한이 넘어간다.(=제어의 역전)</li><li>스프링에서는 일반적인 Java 객체를 new로 생성하여 개발자가 관리하는 것이 아닌 객체의생성, 생명주기의 관리까지 Spring Container(프레임워크)에 모두 맡긴다.</li><li>POJO ( Plain old java object ) 의 생성, 초기화, 서비스, 소멸에 대한 권한을 가진다.</li></ul><h4 id="DL-Dependency-Lookup-의존성-검색"><a href="#DL-Dependency-Lookup-의존성-검색" class="headerlink" title="DL ( Dependency Lookup ) 의존성 검색"></a>DL ( Dependency Lookup ) 의존성 검색</h4><ul><li>저장소에 저장되어 있는 Bean에 접근하기 위해 컨테이너가 제공하는 API를 이용하여 Bean을 Lookup 하는 것.</li><li>DL 사용 시 컨테이너 종속성이 증가하여 주로 DI를 사용한다.</li></ul><h2 id="DI-Dependency-Injection"><a href="#DI-Dependency-Injection" class="headerlink" title="DI ( Dependency Injection )"></a>DI ( Dependency Injection )</h2><p>각 클래스간의 의존관계를 빈 설정(Bean Definition) 정보를 바탕으로 컨테이너가 자동으로 연결해주는 것.(개발자가 XML이나 annotation을 통해 빈 설정)</p><ul><li><h4 id="DI의-장점"><a href="#DI의-장점" class="headerlink" title="DI의 장점"></a>DI의 장점</h4><ul><li>컴포넌트 간의 결합도가 제거되어 코드테스트에 용이하다.</li><li>DI를 통하여 불가능한 상황을 Mock와 같은 기술을 통해 안정적으로 테스트가 가능하다.</li><li>코드를 확장하거나 변경할 때 영향을 최소화한다. (추상화)</li><li>순환참조를 막을 수 있다.</li><li>코드가 단순해진다.</li></ul></li><li><h4 id="DI의-유형"><a href="#DI의-유형" class="headerlink" title="DI의 유형"></a>DI의 유형</h4><ul><li><p>Setter Injection - Setter 메서드를 이용한 의존성 삽입</p><ul><li>의존성을 입력 받는 setter 메서드를 만들고 이를 통해 의존성을 주입한다.</li></ul></li><li><p>Constructor Injection - 생성자를 이용한 의존성 삽입</p><ul><li>필요한 의존성을 포함하는 클래스의 생성자를 만들고 이를 통해 의존성을 주입한다.</li></ul></li><li><p>Method Injection - 일반 메서드를 이용한 의존성 삽입</p><ul><li>의존성을 입력 받는 일반 메서드를 만들고 이를 통해 의존성을 주입한다.</li></ul></li></ul></li><li><h4 id="Spring-DI-컨테이너의-개념"><a href="#Spring-DI-컨테이너의-개념" class="headerlink" title="Spring DI 컨테이너의 개념"></a>Spring DI 컨테이너의 개념</h4><ul><li>Spring DI 컨테이너가 관리하는 객체를 빈(bean)이라고 하며, 이 bean들을 관리한다는 의미로 컨테이너를 빈팩토리(BeanFactory)라고 부른다.</li><li>객체의 생성과 객체 사이의 런타임관계를 DI관점에서 볼 때는 컨테이너를 BeanFacotry라고 한다.</li><li>BeanFacotry에 여러 가지 컨테이너 기능을 추가하여 ApllicationContext)라고 한다.</li></ul></li><li><h4 id="BeanFactory와-ApplicationContext"><a href="#BeanFactory와-ApplicationContext" class="headerlink" title="BeanFactory와 ApplicationContext"></a>BeanFactory와 ApplicationContext</h4><ul><li>BeanFactory<ul><li>Bean을 등록, 생성, 조회, 반환 관리.</li><li>보통은 BeanFactory를 바로 사용하지 않고, 이를 확장한 ApplicationContext를 사용.</li><li>getBean() 메서드가 정의되어 있다.</li></ul></li><li>Application Context<ul><li>Bean을 등록, 생성, 조회, 반환 관리하는 기능은 BeanFactory와 같음.</li><li>Spring의 각종 부가서비스를 추가로 제공.</li><li>Spring이 제공하는 ApplicationContext 구현클래스가 여러가지 종류가 있음.</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IoC </tag>
            
            <tag> DI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>abc</title>
      <link href="/2021/10/13/abc/"/>
      <url>/2021/10/13/abc/</url>
      
        <content type="html"><![CDATA[<p>asdfsfsa</p>]]></content>
      
      
      <categories>
          
          <category> Web </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
            <tag> framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>note1.md</title>
      <link href="/2021/10/06/20211006-note1-md/"/>
      <url>/2021/10/06/20211006-note1-md/</url>
      
        <content type="html"><![CDATA[<h2 id="유효성-검사"><a href="#유효성-검사" class="headerlink" title="유효성 검사"></a>유효성 검사</h2><p>메서드와 구현부{}를 작성할 때, 제일 먼저 해야 하는 일이 매개변수의 값이 적절한 것인지 확인하는 것이다.<br>메서드를 작성하는 사람은 ‘호출하는 쪽에서 알아서 적절한 값을 넘겨주겠지.’라는 생각을 절대 가져서는 안 된다.<br>타입만 맞으면 어떤 값도 매개변수를 통해 넘어올 수 있기 때문에, 가능한 모든 경우의 수에 대해 고민하고 그에 대비한 코드를 작성해야 한다.<br>아래에 정의된 메서드 divide는 매개변수 x를 y로 나눈 결과를 실수(flaot 타입)로 반환하는데, 0으로 나누는 것은 금지되어 있기 때문에 계산 전에 y의 값이 0인지 확인해야 한다.<br>그래서 y의 값이 0이면, 나누기를 계산할 수 없으므로 return문을 이용해서 작업을 중단하고 메서드를 빠져나와야 한다.<br>그렇지 않으면, 나누기를 하는 문장에서 프로그램이 비정상적으로 종료된다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">divide</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="comment">// 작업을 하기 전에 나누느 수(y)가 0인지 확인한다.</span></span><br><span class="line">    <span class="keyword">if</span>(y==<span class="number">0</span>)&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;0으로 나눌 수 없습니다.&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x/(<span class="keyword">float</span>)y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>@자바의 정석</p>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 유효성 검사 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>alg2</title>
      <link href="/2021/09/01/20210901-alg2/"/>
      <url>/2021/09/01/20210901-alg2/</url>
      
        <content type="html"><![CDATA[<p>6<br>6<br>hello</p>]]></content>
      
      
      <categories>
          
          <category> 6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>alg</title>
      <link href="/2021/09/01/20210901-alg/"/>
      <url>/2021/09/01/20210901-alg/</url>
      
        <content type="html"><![CDATA[<p>5<br>5<br>aaaaa</p>]]></content>
      
      
      <categories>
          
          <category> 5 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>testtt</title>
      <link href="/2021/08/18/20210818-testtt/"/>
      <url>/2021/08/18/20210818-testtt/</url>
      
        <content type="html"><![CDATA[<p>4xxxxcvzxcv<br>ccccczxcvzxvcxzcvz<br>asfdsfasfsadfas<br>fsafasfsafasfas<br>xzcvzxcvzxvzxc<br>cxzcvzxcvzxvzxc</p><p>xzcvzxcvzxvzxc<br>xzcvzxcvzxvzxc</p><p>xzcvzxcvzxvzxc<br>xzcvzxcvzxvzxc<br>xzkicvzxcvzxvzxc<br>xzcvzxcvzxvzxc<br>xzcvzxcvzxvzxc<br>zxc</p>]]></content>
      
      
      <categories>
          
          <category> 4 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test66</title>
      <link href="/2021/08/18/20210818-test66/"/>
      <url>/2021/08/18/20210818-test66/</url>
      
        <content type="html"><![CDATA[<p>9<br>9<br>asdfasf<br>asfdas<br>fas<br>fas<br>fdas<br>fas<br>fasf</p>]]></content>
      
      
      <categories>
          
          <category> 9 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 9 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test5</title>
      <link href="/2021/08/18/20210818-test5/"/>
      <url>/2021/08/18/20210818-test5/</url>
      
        <content type="html"><![CDATA[<p>8<br>8<br>H1 asdfasdfasf<br>H2 sdadfasdfdsa<br>H3 asdfasdfsadf</p>]]></content>
      
      
      <categories>
          
          <category> 8 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 8 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>abcdefg</title>
      <link href="/2021/08/12/20210812-abcdefg/"/>
      <url>/2021/08/12/20210812-abcdefg/</url>
      
        <content type="html"><![CDATA[<p>7<br>7</p>]]></content>
      
      
      <categories>
          
          <category> 7 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 7 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>write</title>
      <link href="/2021/07/30/write/"/>
      <url>/2021/07/30/write/</url>
      
        <content type="html"><![CDATA[<p>1<br>1</p>]]></content>
      
      
      <categories>
          
          <category> 1 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>my second post</title>
      <link href="/2021/07/30/my-new-post2/"/>
      <url>/2021/07/30/my-new-post2/</url>
      
        <content type="html"><![CDATA[<p>3<br>3<br>blah blah</p>]]></content>
      
      
      <categories>
          
          <category> 3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>my new post</title>
      <link href="/2021/07/29/my-new-post/"/>
      <url>/2021/07/29/my-new-post/</url>
      
        <content type="html"><![CDATA[<p>2<br>2<br>This is my first brand-new post with hexo.</p><p>I’m very excited!!</p>]]></content>
      
      
      <categories>
          
          <category> 2 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/07/29/hello-world/"/>
      <url>/2021/07/29/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
